name: Sync upstream release

on:
  workflow_dispatch:
  schedule: 
    - cron: "3 7 * * *"


jobs: 
  check:
    name: Check last version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.upstream.outputs.release }}
      result: ${{ steps.check_tag.outputs.result }}
    steps:
    - name: Get Latest Upstream Release
      id: upstream
      uses: pozetroninc/github-action-get-latest-release@v0.8.0
      with: 
        #repository: ${UPSTREAM}
        owner: coder
        repo: code-server
        excludes: prerelease, draft
        token: ${{ secrets.GITHUB_TOKEN }}
    - uses: actions/checkout@v4
      id: checkout
      with:
        ref: develop
        fetch-depth: 0
    - name: Check for Released version
      id: check_tag
      run: |
          if git show-ref --tags --verify --quiet "refs/tags/${{ steps.upstream.outputs.release}}"; then
            echo "Tag ${{ steps.upstream.outputs.release }} already exists" >> $GITHUB_STEP_SUMMARY
            echo "result=noop" >> $GITHUB_OUTPUT
          else
            if git show-ref --verify --quiet "refs/remotes/origin/features/${{ steps.upstream.outputs.release }}"; then
              echo "Tag ${{ steps.upstream.outputs.release }} is missing but feature branch exists" >> $GITHUB_STEP_SUMMARY
              echo "result=noop" >> $GITHUB_OUTPUT
            else
              echo "Tag ${{ steps.upstream.outputs.release }} is missing. Trying to update" >> $GITHUB_STEP_SUMMARY
              echo "result=update" >> $GITHUB_OUTPUT
            fi
          fi
  update:
    name: Update to last version
    runs-on: ubuntu-latest
    needs: check
    if: needs.check.outputs.result == 'update'
    steps: 
    - uses: actions/checkout@v4
      name: Checkout develop
      id: checkout
      with:
        ref: develop
    - name: Create a feature branch to work on
      run: git checkout -b features/${{needs.check.outputs.version}}
    - name: Strip v prefix
      id: stripv
      run: echo "version=$(echo ${{needs.check.outputs.version}} | cut -c2- -)" >> $GITHUB_OUTPUT
    - name: Update version in Dockerfile
      id: replace-build
      run: |
        sed -i '/^ARG CODESERVER_VERSION=/s/.*/ARG CODESERVER_VERSION=${{ steps.stripv.outputs.version }}/' Dockerfile
        sed -i 's/\${VERSION:-[^}]*}/\${VERSION:-${{ steps.stripv.outputs.version }}}/' docker-compose.yaml 
    - name: Commit files and push to feature branch
      run: |
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config user.name "github-actions"
        git add .
        git commit -m "Bump code server version ${{ steps.stripv.outputs.version }}"
        git push --set-upstream origin features/${{needs.check.outputs.version}}
    - name: Create pull request
      run: |
        PR=$(gh pr create --assignee z720 --base develop --fill-first)
        echo "Pull request created: <${PR}>" >> $GITHUB_STEP_SUMMARY
      env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}



    


